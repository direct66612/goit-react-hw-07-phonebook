{"ast":null,"code":"var _jsxFileName = \"/Users/darknetch/Documents/GitHub/goit-react-hw-07-phonebook/src/components/List/List.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../Redux/contactsSlice';\nimport Container from './List.styled';\nimport { selectorContacts } from '../../Redux/selectors';\nimport { selectorFilter } from '../../Redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const contacts = useSelector(selectorContacts);\n  const filter = useSelector(selectorFilter);\n  const getContacts = (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n  const contactsIsFiltered = getContacts(contacts, filter);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: contactsIsFiltered.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"contact__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [name, \": \", number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => dispatch(deleteContact(id)),\n          className: \"contact__btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"3R+rBFQxXNh0z/dkPO+3hsRF/P0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useSelector","useDispatch","deleteContact","Container","selectorContacts","selectorFilter","jsxDEV","_jsxDEV","List","_s","contacts","filter","getContacts","contact","name","toLowerCase","includes","contactsIsFiltered","dispatch","children","map","_ref","id","number","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/darknetch/Documents/GitHub/goit-react-hw-07-phonebook/src/components/List/List.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../Redux/contactsSlice';\nimport Container from './List.styled';\nimport { selectorContacts } from '../../Redux/selectors';\nimport { selectorFilter } from '../../Redux/selectors';\nconst List = () => {\n  const contacts = useSelector(selectorContacts);\n  const filter = useSelector(selectorFilter);\n  const getContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const contactsIsFiltered = getContacts(contacts, filter);\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      {contactsIsFiltered.map(({ id, name, number }) => (\n        <li key={id} className=\"contact__item\">\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            className=\"contact__btn\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </Container>\n  );\n};\nexport default List;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,2BAA2B;AACzD,OAAOC,SAAS,MAAM,eAAe;AACrC,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGV,WAAW,CAACI,gBAAgB,CAAC;EAC9C,MAAMO,MAAM,GAAGX,WAAW,CAACK,cAAc,CAAC;EAC1C,MAAMO,WAAW,GAAGA,CAACF,QAAQ,EAAEC,MAAM,KAAK;IACxC,OAAOD,QAAQ,CAACC,MAAM,CAACE,OAAO,IAC5BA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,MAAM,CAACI,WAAW,CAAC,CAAC,CAC1D,CAAC;EACH,CAAC;EACD,MAAME,kBAAkB,GAAGL,WAAW,CAACF,QAAQ,EAAEC,MAAM,CAAC;EACxD,MAAMO,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,oBACEM,OAAA,CAACJ,SAAS;IAAAgB,QAAA,EACPF,kBAAkB,CAACG,GAAG,CAACC,IAAA;MAAA,IAAC;QAAEC,EAAE;QAAER,IAAI;QAAES;MAAO,CAAC,GAAAF,IAAA;MAAA,oBAC3Cd,OAAA;QAAaiB,SAAS,EAAC,eAAe;QAAAL,QAAA,gBACpCZ,OAAA;UAAAY,QAAA,GACGL,IAAI,EAAC,IAAE,EAACS,MAAM;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACJrB,OAAA;UACEsB,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAChB,aAAa,CAACoB,EAAE,CAAC,CAAE;UAC3CE,SAAS,EAAC,cAAc;UAAAL,QAAA,EACzB;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAVFN,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWP,CAAC;IAAA,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACnB,EAAA,CA5BID,IAAI;EAAA,QACSR,WAAW,EACbA,WAAW,EAOTC,WAAW;AAAA;AAAA8B,EAAA,GATxBvB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}